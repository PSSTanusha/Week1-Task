Multiprocessing:

   A multiprocessing system is one which has more than two processors. The CPUs are added to the system to increase the computing speed of
the system. Each CPU has its own set of registers and main memory. Just because CPUs are separate, it may happen that one CPU must not 
have anything to process and may sit idle and the other may be overloaded with the processes. In such cases, the processes and the 
resources are shared dynamically among the processors.
   Multiprocessing can be classified as symmetric multiprocessing and asymmetric multiprocessing. In symmetric multiprocessing, all processors
are free to run any process in a system. In Asymmetric multiprocessing, there is a master-slave relationship among the processors. 
The master processor is responsible for allotting the process to slave processors.
   If the processor has integrated memory controller then adding processor would increase the amount of addressable memory in the system. 
Multiprocessing can change the memory access model from uniform memory access to nonuniform memory access. The uniform memory access 
amounts the same time for accessing any RAM from any Processor. On the other hands, non-uniform memory access amounts longer time to 
access some part of memory than the other parts.

Multithreading:

     Multithreading is the execution of multiple threads of a single process concurrently within the context of that process. 
Now let us first discuss what is a thread? A thread of a process means a code segment of a process, which has its own thread ID, 
program counter, registers and stack and can execute independently. But threads belonging to the same process has to share the belongings
of that process like code, data, and system resources. Creating separate processes for each service request consumes time and exhaust 
system resources. Instead of incurring this overhead, it is more efficient to create threads of a process.
    To understand the multithreading concept let us take an example of a word processor. A word processor, displays graphic, responds to 
keystrokes, and at the same time, it continues spelling and grammar checking. You do not have to open different word processors to do 
this concurrently. It does get happen in a single word processor with the help of multiple threads.
   Now let us take into consideration the benefits of multithreading. Multithreading increases the responsiveness as if one thread of a 
process is blocked or performing the lengthy operation, the process still continues. The second benefit of multithreading is resource 
sharing as several threads of a process share same code and data within the same address space.
Creating a thread is economical as it shares the code and data of the process to which they belong. So the system does not have to 
allocate resources separately for each thread. Multithreading can be increased on multiprocessing operating system.
As multithreading on multiple CPUs increases parallelism.



Key Differences Between Multiprocessing and Multithreading
1. The key difference between multiprocessing and multithreading is that multiprocessing allows a system to have more than two CPUs 
    added to the system whereas multithreading lets a process generate multiple threads to increase the computing speed of a system.
2. Multiprocessing system executes multiple processes simultaneously whereas, the multithreading system let execute multiple threads 
   of a process simultaneously.
3. Creating a process can consume time and even exhaust the system resources. However creating threads is economical as threads 
   belonging to the same process share the belongings of that process.
4. Multiprocessing can be classified into symmetric multiprocessing and asymmetric multiprocessing whereas, multithreading is not 
   classified further.

